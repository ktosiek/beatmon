-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Beatmon.Api.Mutation exposing (AuthenticateRequiredArguments, CreateAccountRequiredArguments, CreateHeartbeatLogRequiredArguments, CreateHeartbeatRequiredArguments, DeleteAccountByAccountIdRequiredArguments, DeleteAccountByEmailRequiredArguments, DeleteAccountRequiredArguments, DeleteHeartbeatByHeartbeatIdAndAccountIdRequiredArguments, DeleteHeartbeatByHeartbeatIdRequiredArguments, DeleteHeartbeatLogByDateAndHeartbeatIdRequiredArguments, DeleteHeartbeatLogRequiredArguments, DeleteHeartbeatRequiredArguments, RefreshTokenRequiredArguments, UpdateAccountByAccountIdRequiredArguments, UpdateAccountByEmailRequiredArguments, UpdateAccountRequiredArguments, UpdateHeartbeatByHeartbeatIdAndAccountIdRequiredArguments, UpdateHeartbeatByHeartbeatIdRequiredArguments, UpdateHeartbeatLogByDateAndHeartbeatIdRequiredArguments, UpdateHeartbeatLogRequiredArguments, UpdateHeartbeatRequiredArguments, authenticate, createAccount, createHeartbeat, createHeartbeatLog, deleteAccount, deleteAccountByAccountId, deleteAccountByEmail, deleteHeartbeat, deleteHeartbeatByHeartbeatId, deleteHeartbeatByHeartbeatIdAndAccountId, deleteHeartbeatLog, deleteHeartbeatLogByDateAndHeartbeatId, refreshToken, selection, updateAccount, updateAccountByAccountId, updateAccountByEmail, updateHeartbeat, updateHeartbeatByHeartbeatId, updateHeartbeatByHeartbeatIdAndAccountId, updateHeartbeatLog, updateHeartbeatLogByDateAndHeartbeatId)

import Beatmon.Api.InputObject
import Beatmon.Api.Interface
import Beatmon.Api.Object
import Beatmon.Api.Scalar
import Beatmon.Api.Union
import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


{-| Select fields to build up a top-level mutation. The request can be sent with
functions from `Graphql.Http`.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) RootMutation
selection constructor =
    Object.selection constructor


type alias CreateAccountRequiredArguments =
    { input : Beatmon.Api.InputObject.CreateAccountInput }


{-| Creates a single `Account`.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
createAccount : CreateAccountRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.CreateAccountPayload -> Field (Maybe decodesTo) RootMutation
createAccount requiredArgs object_ =
    Object.selectionField "createAccount" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeCreateAccountInput ] object_ (identity >> Decode.nullable)


type alias CreateHeartbeatRequiredArguments =
    { input : Beatmon.Api.InputObject.CreateHeartbeatInput }


{-| Creates a single `Heartbeat`.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
createHeartbeat : CreateHeartbeatRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.CreateHeartbeatPayload -> Field (Maybe decodesTo) RootMutation
createHeartbeat requiredArgs object_ =
    Object.selectionField "createHeartbeat" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeCreateHeartbeatInput ] object_ (identity >> Decode.nullable)


type alias CreateHeartbeatLogRequiredArguments =
    { input : Beatmon.Api.InputObject.CreateHeartbeatLogInput }


{-| Creates a single `HeartbeatLog`.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
createHeartbeatLog : CreateHeartbeatLogRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.CreateHeartbeatLogPayload -> Field (Maybe decodesTo) RootMutation
createHeartbeatLog requiredArgs object_ =
    Object.selectionField "createHeartbeatLog" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeCreateHeartbeatLogInput ] object_ (identity >> Decode.nullable)


type alias UpdateAccountRequiredArguments =
    { input : Beatmon.Api.InputObject.UpdateAccountInput }


{-| Updates a single `Account` using its globally unique id and a patch.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
updateAccount : UpdateAccountRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.UpdateAccountPayload -> Field (Maybe decodesTo) RootMutation
updateAccount requiredArgs object_ =
    Object.selectionField "updateAccount" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeUpdateAccountInput ] object_ (identity >> Decode.nullable)


type alias UpdateAccountByAccountIdRequiredArguments =
    { input : Beatmon.Api.InputObject.UpdateAccountByAccountIdInput }


{-| Updates a single `Account` using a unique key and a patch.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
updateAccountByAccountId : UpdateAccountByAccountIdRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.UpdateAccountPayload -> Field (Maybe decodesTo) RootMutation
updateAccountByAccountId requiredArgs object_ =
    Object.selectionField "updateAccountByAccountId" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeUpdateAccountByAccountIdInput ] object_ (identity >> Decode.nullable)


type alias UpdateAccountByEmailRequiredArguments =
    { input : Beatmon.Api.InputObject.UpdateAccountByEmailInput }


{-| Updates a single `Account` using a unique key and a patch.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
updateAccountByEmail : UpdateAccountByEmailRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.UpdateAccountPayload -> Field (Maybe decodesTo) RootMutation
updateAccountByEmail requiredArgs object_ =
    Object.selectionField "updateAccountByEmail" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeUpdateAccountByEmailInput ] object_ (identity >> Decode.nullable)


type alias UpdateHeartbeatRequiredArguments =
    { input : Beatmon.Api.InputObject.UpdateHeartbeatInput }


{-| Updates a single `Heartbeat` using its globally unique id and a patch.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
updateHeartbeat : UpdateHeartbeatRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.UpdateHeartbeatPayload -> Field (Maybe decodesTo) RootMutation
updateHeartbeat requiredArgs object_ =
    Object.selectionField "updateHeartbeat" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeUpdateHeartbeatInput ] object_ (identity >> Decode.nullable)


type alias UpdateHeartbeatByHeartbeatIdRequiredArguments =
    { input : Beatmon.Api.InputObject.UpdateHeartbeatByHeartbeatIdInput }


{-| Updates a single `Heartbeat` using a unique key and a patch.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
updateHeartbeatByHeartbeatId : UpdateHeartbeatByHeartbeatIdRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.UpdateHeartbeatPayload -> Field (Maybe decodesTo) RootMutation
updateHeartbeatByHeartbeatId requiredArgs object_ =
    Object.selectionField "updateHeartbeatByHeartbeatId" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeUpdateHeartbeatByHeartbeatIdInput ] object_ (identity >> Decode.nullable)


type alias UpdateHeartbeatByHeartbeatIdAndAccountIdRequiredArguments =
    { input : Beatmon.Api.InputObject.UpdateHeartbeatByHeartbeatIdAndAccountIdInput }


{-| Updates a single `Heartbeat` using a unique key and a patch.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
updateHeartbeatByHeartbeatIdAndAccountId : UpdateHeartbeatByHeartbeatIdAndAccountIdRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.UpdateHeartbeatPayload -> Field (Maybe decodesTo) RootMutation
updateHeartbeatByHeartbeatIdAndAccountId requiredArgs object_ =
    Object.selectionField "updateHeartbeatByHeartbeatIdAndAccountId" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeUpdateHeartbeatByHeartbeatIdAndAccountIdInput ] object_ (identity >> Decode.nullable)


type alias UpdateHeartbeatLogRequiredArguments =
    { input : Beatmon.Api.InputObject.UpdateHeartbeatLogInput }


{-| Updates a single `HeartbeatLog` using its globally unique id and a patch.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
updateHeartbeatLog : UpdateHeartbeatLogRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.UpdateHeartbeatLogPayload -> Field (Maybe decodesTo) RootMutation
updateHeartbeatLog requiredArgs object_ =
    Object.selectionField "updateHeartbeatLog" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeUpdateHeartbeatLogInput ] object_ (identity >> Decode.nullable)


type alias UpdateHeartbeatLogByDateAndHeartbeatIdRequiredArguments =
    { input : Beatmon.Api.InputObject.UpdateHeartbeatLogByDateAndHeartbeatIdInput }


{-| Updates a single `HeartbeatLog` using a unique key and a patch.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
updateHeartbeatLogByDateAndHeartbeatId : UpdateHeartbeatLogByDateAndHeartbeatIdRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.UpdateHeartbeatLogPayload -> Field (Maybe decodesTo) RootMutation
updateHeartbeatLogByDateAndHeartbeatId requiredArgs object_ =
    Object.selectionField "updateHeartbeatLogByDateAndHeartbeatId" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeUpdateHeartbeatLogByDateAndHeartbeatIdInput ] object_ (identity >> Decode.nullable)


type alias DeleteAccountRequiredArguments =
    { input : Beatmon.Api.InputObject.DeleteAccountInput }


{-| Deletes a single `Account` using its globally unique id.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
deleteAccount : DeleteAccountRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.DeleteAccountPayload -> Field (Maybe decodesTo) RootMutation
deleteAccount requiredArgs object_ =
    Object.selectionField "deleteAccount" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeDeleteAccountInput ] object_ (identity >> Decode.nullable)


type alias DeleteAccountByAccountIdRequiredArguments =
    { input : Beatmon.Api.InputObject.DeleteAccountByAccountIdInput }


{-| Deletes a single `Account` using a unique key.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
deleteAccountByAccountId : DeleteAccountByAccountIdRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.DeleteAccountPayload -> Field (Maybe decodesTo) RootMutation
deleteAccountByAccountId requiredArgs object_ =
    Object.selectionField "deleteAccountByAccountId" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeDeleteAccountByAccountIdInput ] object_ (identity >> Decode.nullable)


type alias DeleteAccountByEmailRequiredArguments =
    { input : Beatmon.Api.InputObject.DeleteAccountByEmailInput }


{-| Deletes a single `Account` using a unique key.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
deleteAccountByEmail : DeleteAccountByEmailRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.DeleteAccountPayload -> Field (Maybe decodesTo) RootMutation
deleteAccountByEmail requiredArgs object_ =
    Object.selectionField "deleteAccountByEmail" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeDeleteAccountByEmailInput ] object_ (identity >> Decode.nullable)


type alias DeleteHeartbeatRequiredArguments =
    { input : Beatmon.Api.InputObject.DeleteHeartbeatInput }


{-| Deletes a single `Heartbeat` using its globally unique id.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
deleteHeartbeat : DeleteHeartbeatRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.DeleteHeartbeatPayload -> Field (Maybe decodesTo) RootMutation
deleteHeartbeat requiredArgs object_ =
    Object.selectionField "deleteHeartbeat" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeDeleteHeartbeatInput ] object_ (identity >> Decode.nullable)


type alias DeleteHeartbeatByHeartbeatIdRequiredArguments =
    { input : Beatmon.Api.InputObject.DeleteHeartbeatByHeartbeatIdInput }


{-| Deletes a single `Heartbeat` using a unique key.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
deleteHeartbeatByHeartbeatId : DeleteHeartbeatByHeartbeatIdRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.DeleteHeartbeatPayload -> Field (Maybe decodesTo) RootMutation
deleteHeartbeatByHeartbeatId requiredArgs object_ =
    Object.selectionField "deleteHeartbeatByHeartbeatId" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeDeleteHeartbeatByHeartbeatIdInput ] object_ (identity >> Decode.nullable)


type alias DeleteHeartbeatByHeartbeatIdAndAccountIdRequiredArguments =
    { input : Beatmon.Api.InputObject.DeleteHeartbeatByHeartbeatIdAndAccountIdInput }


{-| Deletes a single `Heartbeat` using a unique key.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
deleteHeartbeatByHeartbeatIdAndAccountId : DeleteHeartbeatByHeartbeatIdAndAccountIdRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.DeleteHeartbeatPayload -> Field (Maybe decodesTo) RootMutation
deleteHeartbeatByHeartbeatIdAndAccountId requiredArgs object_ =
    Object.selectionField "deleteHeartbeatByHeartbeatIdAndAccountId" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeDeleteHeartbeatByHeartbeatIdAndAccountIdInput ] object_ (identity >> Decode.nullable)


type alias DeleteHeartbeatLogRequiredArguments =
    { input : Beatmon.Api.InputObject.DeleteHeartbeatLogInput }


{-| Deletes a single `HeartbeatLog` using its globally unique id.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
deleteHeartbeatLog : DeleteHeartbeatLogRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.DeleteHeartbeatLogPayload -> Field (Maybe decodesTo) RootMutation
deleteHeartbeatLog requiredArgs object_ =
    Object.selectionField "deleteHeartbeatLog" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeDeleteHeartbeatLogInput ] object_ (identity >> Decode.nullable)


type alias DeleteHeartbeatLogByDateAndHeartbeatIdRequiredArguments =
    { input : Beatmon.Api.InputObject.DeleteHeartbeatLogByDateAndHeartbeatIdInput }


{-| Deletes a single `HeartbeatLog` using a unique key.

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
deleteHeartbeatLogByDateAndHeartbeatId : DeleteHeartbeatLogByDateAndHeartbeatIdRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.DeleteHeartbeatLogPayload -> Field (Maybe decodesTo) RootMutation
deleteHeartbeatLogByDateAndHeartbeatId requiredArgs object_ =
    Object.selectionField "deleteHeartbeatLogByDateAndHeartbeatId" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeDeleteHeartbeatLogByDateAndHeartbeatIdInput ] object_ (identity >> Decode.nullable)


type alias AuthenticateRequiredArguments =
    { input : Beatmon.Api.InputObject.AuthenticateInput }


{-|

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
authenticate : AuthenticateRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.AuthenticatePayload -> Field (Maybe decodesTo) RootMutation
authenticate requiredArgs object_ =
    Object.selectionField "authenticate" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeAuthenticateInput ] object_ (identity >> Decode.nullable)


type alias RefreshTokenRequiredArguments =
    { input : Beatmon.Api.InputObject.RefreshTokenInput }


{-|

  - input - The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.

-}
refreshToken : RefreshTokenRequiredArguments -> SelectionSet decodesTo Beatmon.Api.Object.RefreshTokenPayload -> Field (Maybe decodesTo) RootMutation
refreshToken requiredArgs object_ =
    Object.selectionField "refreshToken" [ Argument.required "input" requiredArgs.input Beatmon.Api.InputObject.encodeRefreshTokenInput ] object_ (identity >> Decode.nullable)
