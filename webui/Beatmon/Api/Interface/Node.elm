-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Beatmon.Api.Interface.Node exposing (commonSelection, nodeId, onAccount, onHeartbeat, onHeartbeatLog, onQuery, selection)

import Beatmon.Api.InputObject
import Beatmon.Api.Interface
import Beatmon.Api.Object
import Beatmon.Api.Scalar
import Beatmon.Api.Union
import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode


{-| Select only common fields from the interface.
-}
commonSelection : (a -> constructor) -> SelectionSet (a -> constructor) Beatmon.Api.Interface.Node
commonSelection constructor =
    Object.selection constructor


{-| Select both common and type-specific fields from the interface.
-}
selection : (Maybe typeSpecific -> a -> constructor) -> List (FragmentSelectionSet typeSpecific Beatmon.Api.Interface.Node) -> SelectionSet (a -> constructor) Beatmon.Api.Interface.Node
selection constructor typeSpecificDecoders =
    Object.interfaceSelection typeSpecificDecoders constructor


onQuery : SelectionSet decodesTo RootQuery -> FragmentSelectionSet decodesTo Beatmon.Api.Interface.Node
onQuery (SelectionSet fields decoder) =
    FragmentSelectionSet "Query" fields decoder


onAccount : SelectionSet decodesTo Beatmon.Api.Object.Account -> FragmentSelectionSet decodesTo Beatmon.Api.Interface.Node
onAccount (SelectionSet fields decoder) =
    FragmentSelectionSet "Account" fields decoder


onHeartbeat : SelectionSet decodesTo Beatmon.Api.Object.Heartbeat -> FragmentSelectionSet decodesTo Beatmon.Api.Interface.Node
onHeartbeat (SelectionSet fields decoder) =
    FragmentSelectionSet "Heartbeat" fields decoder


onHeartbeatLog : SelectionSet decodesTo Beatmon.Api.Object.HeartbeatLog -> FragmentSelectionSet decodesTo Beatmon.Api.Interface.Node
onHeartbeatLog (SelectionSet fields decoder) =
    FragmentSelectionSet "HeartbeatLog" fields decoder


{-| A globally unique identifier. Can be used in various places throughout the system to identify this single value.
-}
nodeId : Field Beatmon.Api.Scalar.Id Beatmon.Api.Interface.Node
nodeId =
    Object.fieldDecoder "nodeId" [] (Object.scalarDecoder |> Decode.map Beatmon.Api.Scalar.Id)
